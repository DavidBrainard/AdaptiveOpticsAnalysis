

clear;
clc

% [distortfile, distortpath]=uigetfile('*.mat','Select the desinusoid file for this dataset.');

% AOSLO_Static_Distortion_Repair(load(fullfile(distortpath,distortfile),'horizontal_fringes_indices_minima'));
load('desinusoid_matrix_790nm_1p0_deg_118p1_lpmm_fringe_16p32_pix.mat','horizontal_fringes_indices_minima');

%
fitstartind=10; % The point at which we'll start fitting (as we know the beginning is distorted)

horizontal_fringes_indices_minima=horizontal_fringes_indices_minima';

xvals = (1:length(horizontal_fringes_indices_minima))';
% Determine the linreg fit coefficients (X\y)
coeff = [ones(size(xvals(fitstartind:end))) xvals(fitstartind:end)] \ horizontal_fringes_indices_minima(fitstartind:end);

fringe_reg = coeff(2).*xvals + coeff(1);

residuals = (fringe_reg-horizontal_fringes_indices_minima);

p=fit(xvals,residuals,'exp2');
plot(p,xvals,residuals);
% Set for how far into the fringes you want to attempt to repair distortion
dist_fix_rng = 8;

% for i=1:horizontal_fringes_indices_minima(dist_fix_rng)
% 
%     staticygriddistortion(i,:) = repmat(median(ymotion_vect(i,:)), [1 size(im,2)] );
% end
% horz_fringe_residuals = interp1(horizontal_fringes_indices_minima(1:dist_fix_rng));



motion_path = uigetdir(pwd);

fNames = read_folder_contents(motion_path,'tif');

for i=1:length(fNames)    
    AOSLO_Eye_Motion_Distortion_Repair(motion_path, fNames{i});
end